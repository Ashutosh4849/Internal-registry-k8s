1. mkdir -p /registry && cd "$_"
2. mkdir certs
3. openssl req -x509 -newkey rsa:4096 -days 365 -nodes -sha256 -keyout certs/tls.key -out certs/tls.crt -subj "/CN=docker-registry" -addext "subjectAltName = DNS:docker-registry"
4. mkdir auth
5. podman run --rm --entrypoint htpasswd registry:2.6.2 -Bbn myuser mypasswd > auth/htpasswd
6. kubectl create secret tls certs-secret --cert=/registry/certs/tls.crt --key=/registry/certs/tls.key -n "namespace"
7. kubectl create secret generic auth-secret --from-file=/registry/auth/htpasswd -n "namespace"
8. Creating Persistent Volume and Claim for repository storage ( https://github.com/Ashutosh4849/Internal-registry-k8s/tree/main/yaml-files ) apply the file
9. Creating the Registry Deployment ( Refer the git hub link )
10. export REGISTRY_NAME="docker-registry"
11. export REGISTRY_IP="service ip of registry "
12. for x in $(kubectl get nodes -o jsonpath='{ $.items[*].status.addresses[?(@.type=="InternalIP")].address }'); do ssh root@$x "echo '$REGISTRY_IP $REGISTRY_NAME' >> /etc/hosts"; done
13.  for x in $(kubectl get nodes -o jsonpath='{ $.items[*].status.addresses[?(@.type=="InternalIP")].address }'); do ssh root@$x "rm -rf /etc/docker/certs.d/$REGISTRY_NAME:5000;mkdir -p /etc/docker/certs.d/$REGISTRY_NAME:5000"; done
14. for x in $(kubectl get nodes -o jsonpath='{ $.items[*].status.addresses[?(@.type=="InternalIP")].address }'); do scp /registry/certs/tls.crt root@$x:/etc/docker/certs.d/$REGISTRY_NAME:5000/ca.crt; done
15.podman login docker-registry:5000 -u myuser -p mypasswd
16. kubectl create secret docker-registry reg-cred-secret --docker-server=$REGISTRY_NAME:5000 --docker-username=myuser --docker-password=mypasswd
17. docker pull nginx
18. docker tag nginx:latest docker-registry:5000/mynginx:v1
19. docker push docker-registry:5000/mynginx:v1
